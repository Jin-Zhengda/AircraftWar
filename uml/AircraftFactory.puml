@startuml
'https://plantuml.com/sequence-diagram

Abstract class AbstractAircraft {
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp, int shootNum)
}

class ElitePlusEnemy {
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int sppedY, int hp, int shootNum)
}

class BossEnemy {
    + BossEnemy(int locationX, int locationY, int speedX, int sppedY, int hp, int shootNum)
}

AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- ElitePlusEnemy
AbstractAircraft <|-- BossEnemy

interface AircraftFactory {
    + {abstract} creatAircraft(int shootNum, int hp): AbstractAircraft
}

class MobEnemyFactory {
    + creatAircraft(int shootNum, int hp): AbstractAircraft
}

class EliteEnemyFactory {
    + creatAircraft(int shootNum, int hp): AbstractAircraft
}

class BossEnemyFactory {
    + creatAircraft(int shootNum, int hp): AbstractAircraft
}

AircraftFactory <|.. MobEnemyFactory
AircraftFactory <|.. EliteEnemyFactory
AircraftFactory <|.. BossEnemyFactory

AbstractAircraft <.. AircraftFactory
@enduml